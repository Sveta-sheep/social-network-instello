{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","helpers/validators.js","components/common/FormsControls/FormsControls.js","components/Login/Login.jsx"],"names":["module","exports","required","value","undefined","maxLength","length","email","test","FormContainer","input","meta","Element","props","hasError","touched","error","className","styles","formsControls","Textarea","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","name","placeholder","component","validate","formLogin","formLoginError","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","password","rememberMe"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,MAAQ,6BAA6B,iBAAmB,wCAAwC,UAAY,iCAAiC,eAAiB,wC,iCCDrO,+GAEaC,EAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,qBAExCC,EAAY,SAAAA,GAAS,OAAI,SAAAF,GAAK,OAAIA,EAAMG,OAASD,EAAf,wBACxBA,QACjBD,IAEOG,EAAQ,SAAAJ,GAAK,OACtBA,IAAU,qDAAqDK,KAAKL,GAC9D,6BACAC,I,yJCRJK,EAAgB,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAAYC,EAAW,0CAClDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACI,sBAAKC,UAAWC,IAAOC,cAAgB,KAAOL,EAAWI,IAAOF,MAAQ,IAAxE,UACA,8BACA,cAACJ,EAAD,2BAAaF,GAAWG,MAEvBC,GAAY,+BAAOH,EAAKK,YAKpBI,EAAW,SAACP,GACrB,OACI,cAACJ,EAAD,2BAAmBI,GAAnB,IAA0BD,QAAQ,eAI7BS,EAAQ,SAACR,GAClB,OACI,cAACJ,EAAD,2BAAmBI,GAAnB,IAA0BD,QAAQ,a,iCCvB1C,oGA2CMU,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAjCL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcT,EAAW,EAAXA,MAC9B,OACI,uBAAMU,SAAUD,EAAhB,UACI,8BACI,cAAC,IAAD,CACAE,KAAM,QACNC,YAAa,QACbC,UAAWR,IACXS,SAAU,CAAC5B,IAAUK,KACrBU,UAAWC,IAAOa,UAAY,KAAOf,GAASE,IAAOc,oBAEzD,8BACI,cAAC,IAAD,CACAL,KAAM,WACNC,YAAa,WACbC,UAAWR,IACXS,SAAU,CAAC5B,KACX+B,KAAK,WACLhB,UAAWC,IAAOa,UAAY,KAAOf,GAASE,IAAOc,oBAExDhB,GAAS,qBAAKC,UAAWC,IAAOgB,iBAAvB,SACLlB,IAEL,gCACA,gCACI,cAAC,IAAD,CAAOW,KAAM,aAAcM,KAAM,WAAYJ,UAAWR,MAD5D,kBAGI,oDA6BDc,uBAJO,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAnBD,SAACtB,GAKX,OAAIA,EAAMwB,OACC,cAAC,IAAD,CAAUG,GAAI,YAGlB,gCACH,uCACA,cAAClB,EAAD,CAAgBI,SAVH,SAACe,GACd5B,EAAM0B,MAAME,EAASlC,MAAOkC,EAASC,SAAUD,EAASE","file":"static/js/7.f98271fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControls\":\"FormsControls_formsControls__1HYau\",\"error\":\"FormsControls_error__6jTk1\",\"formSummaryError\":\"FormsControls_formSummaryError__2atmO\",\"formLogin\":\"FormsControls_formLogin__12L3a\",\"formLoginError\":\"FormsControls_formLoginError__2fZkF\"};","import React from 'react'\r\n\r\nexport const required = value => value ? undefined : \"Field is required\"\r\n\r\nexport const maxLength = maxLength => value => value.length > maxLength\r\n    ? `Max length is ${maxLength}`\r\n    : undefined\r\n\r\nexport const email = value =>\r\n    value && !/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormContainer = ({input, meta, Element, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formsControls + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n        <Element {...input} {...props}/>\r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <FormContainer {...props} Element=\"textarea\"></FormContainer>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormContainer {...props} Element=\"input\"></FormContainer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { email, required } from '../../helpers/validators'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <Field \r\n                name={\"email\"} \r\n                placeholder={\"Email\"} \r\n                component={Input}\r\n                validate={[required, email]}\r\n                className={styles.formLogin + \" \" + (error && styles.formLoginError)} />\r\n            </div>\r\n            <div>\r\n                <Field \r\n                name={\"password\"} \r\n                placeholder={\"Password\"} \r\n                component={Input}\r\n                validate={[required]}\r\n                type=\"password\"\r\n                className={styles.formLogin + \" \" + (error && styles.formLoginError)} />\r\n            </div>\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={Input} /> remember me\r\n            </div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    \r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"} />\r\n    } \r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n"],"sourceRoot":""}